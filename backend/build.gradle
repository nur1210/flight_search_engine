plugins {
    id 'org.springframework.boot' version '2.7.3'
    id 'io.spring.dependency-management' version '1.0.13.RELEASE'
    id 'java'
    id 'org.sonarqube' version '3.4.0.2513'
    id 'jacoco'
    id 'com.avast.gradle.docker-compose' version '0.14.3'
}

group = 'fontys.s3'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

jacocoTestReport {
    reports {
        xml.enabled true
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'ch.qos.logback:logback-classic:1.2.11'
    implementation 'org.postgresql:postgresql:42.5.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:2.7.3'
    implementation 'net.logstash.logback:logstash-logback-encoder:7.1.1'
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.7'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'com.auth0:java-jwt:4.1.0'
    implementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
    implementation 'org.mockito:mockito-core:4.8.1'
    implementation 'org.jetbrains:annotations:20.1.0'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'junit:junit:4.13.1'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.8.1'
    testImplementation 'org.springframework:spring-test:5.3.23'
    testImplementation 'com.fasterxml.jackson.core:jackson-databind'
    testImplementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'jakarta.xml.bind:jakarta.xml.bind-api'
    testImplementation "org.assertj:assertj-core"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testImplementation "org.junit.jupiter:junit-jupiter-params"
    testImplementation "org.junit.jupiter:junit-jupiter-engine"
    testImplementation "org.mockito:mockito-core"
    testImplementation 'org.mockito:mockito-inline'
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.springframework:spring-test"
    testImplementation 'org.skyscreamer:jsonassert'
    testImplementation 'org.springframework:spring-webmvc'
    testImplementation 'org.springframework:spring-tx'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

jacoco{
    toolVersion = "0.8.8";
    reportsDir = file("$buildDir/customJacocoReportDir")
}

sonarqube {
    properties {
        property "sonar.host.url", System.getenv("http://localhost:9000")
        property "sonar.login", System.getenv("sqp_7cdcf9351bce2b5b07cb9d0abfe32c93826c4dae")
    }
}

